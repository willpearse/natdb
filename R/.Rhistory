abline(lm(rcm$speed ~ rcm$trial))
abline(lm(rcm$speed ~ rcm$trial))
plot(npreg(rcm$speed~rcm$wound))
summary(npreg(rcm$speed~rcm$wound))
summary(lm(rcm$speed~rcm$wound))
summary(np(rcm$speed~rcm$wound))
summary(npreg(rcm$speed~rcm$wound))
?npreg
summary(npregbw(rcm$speed~rcm$wound))
rcm$speed
rcm$wound
summary(npregbw(rcm$speed~rcm$wound))
setwd("~/Desktop/natdb/R")
data <- read.csv2(ft_get_si("10.5061/dryad.qg062", "phenotypictraits.csv"), sep=';')
data <- read.csv2(ft_get_si("10.5061/dryad.qg062", "phenotypictraits.csv"), sep=';')
# Unzips a file from a downloaded zip file
# param file name of file to be extracted from zip
# param zip location and name of zip file (e.g.,
#     ~/Downlaods/a_file.zip)
# param to.save.dir directory to save resulting file (DEFAULT: a new
#     temporary directory will be used)
# param to.save.name name to save the file as (DEFAULT: it will be
#     named paste(zip,file, sep='_'))
# return Complete path to unzipped file
#' @importFrom utils unzip download.file
#' @importFrom reshape2 melt
#' @importFrom httr GET
#' @importFrom stats setNames
.unzip <- function(file, zip, to.save.dir, to.save.name){
if(missing(to.save.dir))
to.save.dir <- tempdir()
if(missing(to.save.name))
to.save.name <- file
files <- unzip(zip, list=TRUE)
if(!file %in% files$Name)
stop("Required file not in zipfile ", zip)
file <- unzip(zip, file)
file.rename(file, file.path(to.save.dir, to.save.name))
return(file.path(to.save.dir, to.save.name))
}
.fac.sim <- function(x){
x <- Filter(Negate(is.na), x)
x <- x[x != "" & x != " "]
x <- unique(x)
return(paste(x,collapse="_"))
}
#' @importFrom stats model.matrix
.expand.factor <- function(factor_to_expand, name){
names <- rep(name, length(unique(factor_to_expand)))
output <- model.matrix(~factor_to_expand-1)
colnames(output) <- paste(names, gsub("factor_to_expand", "", colnames(output)), sep="_")
return(as.data.frame(output))
}
.df.melt <- function(x, species, units, metadata){
# Meta-data and units
if(missing(units)){
units <- setNames(rep(NA, length(names(x))), names(x))
} else {
units <- setNames(units, setdiff(names(x),c(species,"metadata")))
}
if(!missing(metadata)){
metadata <- apply(sapply(1:2, function(y) paste(names(x)[y],x[,y],sep=":")), 1, paste, collapse=";")
} else metadata <- rep(NA, nrow(x))
# Numeric data
numeric <- x[,sapply(x, is.numeric) | names(x) == species,drop=FALSE]
if(ncol(numeric) > 1){
numeric$metadata <- metadata
numeric <- melt(numeric, id.vars=c(species,"metadata"))
numeric$variable <- as.character(numeric$variable) # impossible to stop this coercion in melt!
numeric <- numeric[!is.na(numeric$value),]
names(numeric)[1] <- "species"
numeric$units <- units[numeric$variable]
} else numeric <- NULL
# Character data
character <- x[,sapply(x, Negate(is.numeric)) | names(x) == species,drop=FALSE]
if(ncol(character) > 1){
character$metadata <- metadata
character <- melt(character, id.vars=c(species,"metadata"))
character$variable <- as.character(character$variable) # impossible to stop this coercion in melt!
character <- character[!is.na(character$value),]
names(character)[1] <- "species"
character$units <- units[character$variable]
} else character <- NULL
#Cleanup and return
return(list(numeric=numeric,character=character))
}
.download <- function(url, dir, save.name, cache=TRUE){
destination <- file.path(dir, save.name)
suffix <- .file.suffix(url, 4)
if(cache==TRUE & file.exists(destination)){
if(!is.na(suffix))
attr(destination, "suffix") <- suffix
return(destination)
}
result <- download.file(url, destination, quiet=TRUE)
if(result != 0)
stop("Error code", result, " downloading file; file may not exist")
if(!is.na(suffix))
attr(destination, "suffix") <- suffix
return(destination)
}
.save.name <- function(doi, save.name, file){
if(is.na(save.name)){
save.name <- paste(doi,file, sep="_")
save.name <- gsub(.Platform$file.sep, "_", save.name, fixed=TRUE)
}
return(save.name)
}
.grep.url <- function(url, regexp, which=1){
html <- as.character(GET(url))
return(.grep.text(html, regexp, which))
}
.grep.text <- function(text, regexp, which=1){
links <- gregexpr(regexp, text)
if(which > length(links[[1]]))
stop("SI number '", which, "' greater than number of detected SIs (", length(links[[1]]), ")")
pos <- as.numeric(links[[1]][which])
return(substr(text, pos, pos+attr(links[[1]], "match.length")[which]-1))
}
.file.suffix <- function(text, max.length=4){
suffix <- .grep.text(text, "[a-zA-Z]+$")
if(nchar(suffix) <= max.length & nchar(suffix) > 0)
return(suffix)
return(NA)
}
data <- read.csv2(ft_get_si("10.5061/dryad.qg062", "phenotypictraits.csv"), sep=';')
data <- read.csv2(ft_get_si("10.5061/dryad.qg062", "phenotypictraits.csv"), sep=';')
install.packages('fulltext')
library(fulltext)
data <- read.csv2(ft_get_si("10.5061/dryad.qg062", "phenotypictraits.csv"), sep=';')
head(data)
?fulltext
download.file("https://datadryad.org/bitstream/handle/10255/dryad.47130/Ontogenetic%20allometry%20data.csv?sequence=1",file)
data <- read.csv('http://datadryad.org/bitstream/handle/10255/dryad.70378/personality_date1.csv?sequence=1')
head(data)
data <- data[,-c(1:4,16)]
colnames(data) <- c('diet','svl','latency','perch_inspected','percent_time_newzone','percent_time_onperch','bite_force','tail_diameter', 'personality_principal_component_1','personality_principal_component_2','transformed_principal_component_1')
data$species <- 'anolis_sagrei'
head(data)
# Unzips a file from a downloaded zip file
# param file name of file to be extracted from zip
# param zip location and name of zip file (e.g.,
#     ~/Downlaods/a_file.zip)
# param to.save.dir directory to save resulting file (DEFAULT: a new
#     temporary directory will be used)
# param to.save.name name to save the file as (DEFAULT: it will be
#     named paste(zip,file, sep='_'))
# return Complete path to unzipped file
#' @importFrom utils unzip download.file
#' @importFrom reshape2 melt
#' @importFrom httr GET
#' @importFrom stats setNames
.unzip <- function(file, zip, to.save.dir, to.save.name){
if(missing(to.save.dir))
to.save.dir <- tempdir()
if(missing(to.save.name))
to.save.name <- file
files <- unzip(zip, list=TRUE)
if(!file %in% files$Name)
stop("Required file not in zipfile ", zip)
file <- unzip(zip, file)
file.rename(file, file.path(to.save.dir, to.save.name))
return(file.path(to.save.dir, to.save.name))
}
.fac.sim <- function(x){
x <- Filter(Negate(is.na), x)
x <- x[x != "" & x != " "]
x <- unique(x)
return(paste(x,collapse="_"))
}
#' @importFrom stats model.matrix
.expand.factor <- function(factor_to_expand, name){
names <- rep(name, length(unique(factor_to_expand)))
output <- model.matrix(~factor_to_expand-1)
colnames(output) <- paste(names, gsub("factor_to_expand", "", colnames(output)), sep="_")
return(as.data.frame(output))
}
.df.melt <- function(x, spp, units, metadata){
# Meta-data and units
if(missing(units)){
units <- setNames(rep(NA, length(names(x))), names(x))
} else {
units <- setNames(units, setdiff(names(x),c(spp,"metadata")))
}
if(!missing(metadata)){
metadata <- apply(sapply(1:2, function(y) paste(names(x)[y],x[,y],sep=":")), 1, paste, collapse=";")
} else metadata <- rep(NA, nrow(x))
# Numeric data
numeric <- x[,sapply(x, is.numeric) | names(x) == spp,drop=FALSE]
if(ncol(numeric) > 1){
numeric$metadata <- metadata
numeric <- melt(numeric, id.vars=c(spp,"metadata"))
numeric$variable <- as.character(numeric$variable) # impossible to stop this coercion in melt!
numeric <- numeric[!is.na(numeric$value),]
names(numeric)[1] <- "species"
numeric$units <- units[numeric$variable]
} else numeric <- NULL
# Character data
character <- x[,sapply(x, Negate(is.numeric)) | names(x) == spp,drop=FALSE]
if(ncol(character) > 1){
character$metadata <- metadata
character <- melt(character, id.vars=c(spp,"metadata"))
character$variable <- as.character(character$variable) # impossible to stop this coercion in melt!
character <- character[!is.na(character$value),]
names(character)[1] <- "species"
character$units <- units[character$variable]
} else character <- NULL
#Cleanup and return
return(list(numeric=numeric,character=character))
}
.download <- function(url, dir, save.name, cache=TRUE){
destination <- file.path(dir, save.name)
suffix <- .file.suffix(url, 4)
if(cache==TRUE & file.exists(destination)){
if(!is.na(suffix))
attr(destination, "suffix") <- suffix
return(destination)
}
result <- download.file(url, destination, quiet=TRUE)
if(result != 0)
stop("Error code", result, " downloading file; file may not exist")
if(!is.na(suffix))
attr(destination, "suffix") <- suffix
return(destination)
}
.save.name <- function(doi, save.name, file){
if(is.na(save.name)){
save.name <- paste(doi,file, sep="_")
save.name <- gsub(.Platform$file.sep, "_", save.name, fixed=TRUE)
}
return(save.name)
}
.grep.url <- function(url, regexp, which=1){
html <- as.character(GET(url))
return(.grep.text(html, regexp, which))
}
.grep.text <- function(text, regexp, which=1){
links <- gregexpr(regexp, text)
if(which > length(links[[1]]))
stop("SI number '", which, "' greater than number of detected SIs (", length(links[[1]]), ")")
pos <- as.numeric(links[[1]][which])
return(substr(text, pos, pos+attr(links[[1]], "match.length")[which]-1))
}
.file.suffix <- function(text, max.length=4){
suffix <- .grep.text(text, "[a-zA-Z]+$")
if(nchar(suffix) <= max.length & nchar(suffix) > 0)
return(suffix)
return(NA)
}
prog.bar <- function(x, y){
if(y < 100){
cat(".")} else {
z <- Filter(function(z) z>=0, seq(1,y,length.out=100)-x)
if(length(z) > 0)
tryCatch(if(z[1] < 1) if((length(z) %% 10)==0) cat("|") else cat("."), error=function(z) cat("."))
}
}
data <- read.csv(ft_get_si("10.5061/dryad.p8740","personality_date1.csv"))
.klomp.2016 <- function(...){
data <- read.csv('http://datadryad.org/bitstream/handle/10255/dryad.117914/draco_comparative%20data.csv?sequence=1')
names(data) <- tolower(gsub("\\.", "_", names(data)))
colnames(data) <- c('species', 'female_dewlap_area', 'male_dewlap_area', "sexual_dimorphism_in_dewlap_area", "sexual_size_dimorphism_svl", "sexual_dichromatism_chromatic_contrast",'sexual_dichromatism_achromatic_contrast', 'female_dewlap_chromatic_contrast', 'male_dewlap_chromatic_contrast','female_dewlap_achromatic_contrast', 'male_dewlap_achromatic_contrast', 'light_level_auc','predation_category')
data$species <- tolower(gsub(" ", "_", (data$species)))
data$species <- gsub("\\(", "", (data$species))
data$species <- gsub("\\)", "", (data$species))
units <- c(rep('cm^2',2), 'cm^2 (nl)', 'cm', rep('JND', 6), 'nl', NA)
data <- .df.melt(data, "species", units=units)
return(data)
}
.klomp.2016()
# Unzips a file from a downloaded zip file
# param file name of file to be extracted from zip
# param zip location and name of zip file (e.g.,
#     ~/Downlaods/a_file.zip)
# param to.save.dir directory to save resulting file (DEFAULT: a new
#     temporary directory will be used)
# param to.save.name name to save the file as (DEFAULT: it will be
#     named paste(zip,file, sep='_'))
# return Complete path to unzipped file
#' @importFrom utils unzip download.file
#' @importFrom reshape2 melt
#' @importFrom httr GET
#' @importFrom stats setNames
.unzip <- function(file, zip, to.save.dir, to.save.name){
if(missing(to.save.dir))
to.save.dir <- tempdir()
if(missing(to.save.name))
to.save.name <- file
files <- unzip(zip, list=TRUE)
if(!file %in% files$Name)
stop("Required file not in zipfile ", zip)
file <- unzip(zip, file)
file.rename(file, file.path(to.save.dir, to.save.name))
return(file.path(to.save.dir, to.save.name))
}
.fac.sim <- function(x){
x <- Filter(Negate(is.na), x)
x <- x[x != "" & x != " "]
x <- unique(x)
return(paste(x,collapse="_"))
}
#' @importFrom stats model.matrix
.expand.factor <- function(factor_to_expand, name){
names <- rep(name, length(unique(factor_to_expand)))
output <- model.matrix(~factor_to_expand-1)
colnames(output) <- paste(names, gsub("factor_to_expand", "", colnames(output)), sep="_")
return(as.data.frame(output))
}
.df.melt <- function(x, spp, units, metadata){
# Meta-data and units
if(missing(units)){
units <- setNames(rep(NA, length(names(x))), names(x))
} else {
units <- setNames(units, setdiff(names(x),c(spp,"metadata")))
}
if(!missing(metadata)){
metadata <- apply(sapply(1:2, function(y) paste(names(x)[y],x[,y],sep=":")), 1, paste, collapse=";")
} else metadata <- rep(NA, nrow(x))
# Numeric data
numeric <- x[,sapply(x, is.numeric) | names(x) == spp,drop=FALSE]
if(ncol(numeric) > 1){
numeric$metadata <- metadata
numeric <- melt(numeric, id.vars=c(spp,"metadata"))
numeric$variable <- as.character(numeric$variable) # impossible to stop this coercion in melt!
numeric <- numeric[!is.na(numeric$value),]
names(numeric)[1] <- "species"
numeric$units <- units[numeric$variable]
} else numeric <- NULL
# Character data
character <- x[,sapply(x, Negate(is.numeric)) | names(x) == spp,drop=FALSE]
if(ncol(character) > 1){
character$metadata <- metadata
character <- melt(character, id.vars=c(spp,"metadata"))
character$variable <- as.character(character$variable) # impossible to stop this coercion in melt!
character <- character[!is.na(character$value),]
names(character)[1] <- "species"
character$units <- units[character$variable]
} else character <- NULL
#Cleanup and return
return(list(numeric=numeric,character=character))
}
.download <- function(url, dir, save.name, cache=TRUE){
destination <- file.path(dir, save.name)
suffix <- .file.suffix(url, 4)
if(cache==TRUE & file.exists(destination)){
if(!is.na(suffix))
attr(destination, "suffix") <- suffix
return(destination)
}
result <- download.file(url, destination, quiet=TRUE)
if(result != 0)
stop("Error code", result, " downloading file; file may not exist")
if(!is.na(suffix))
attr(destination, "suffix") <- suffix
return(destination)
}
.save.name <- function(doi, save.name, file){
if(is.na(save.name)){
save.name <- paste(doi,file, sep="_")
save.name <- gsub(.Platform$file.sep, "_", save.name, fixed=TRUE)
}
return(save.name)
}
.grep.url <- function(url, regexp, which=1){
html <- as.character(GET(url))
return(.grep.text(html, regexp, which))
}
.grep.text <- function(text, regexp, which=1){
links <- gregexpr(regexp, text)
if(which > length(links[[1]]))
stop("SI number '", which, "' greater than number of detected SIs (", length(links[[1]]), ")")
pos <- as.numeric(links[[1]][which])
return(substr(text, pos, pos+attr(links[[1]], "match.length")[which]-1))
}
.file.suffix <- function(text, max.length=4){
suffix <- .grep.text(text, "[a-zA-Z]+$")
if(nchar(suffix) <= max.length & nchar(suffix) > 0)
return(suffix)
return(NA)
}
prog.bar <- function(x, y){
if(y < 100){
cat(".")} else {
z <- Filter(function(z) z>=0, seq(1,y,length.out=100)-x)
if(length(z) > 0)
tryCatch(if(z[1] < 1) if((length(z) %% 10)==0) cat("|") else cat("."), error=function(z) cat("."))
}
}
.klomp.2016 <- function(...){
data <- read.csv('http://datadryad.org/bitstream/handle/10255/dryad.117914/draco_comparative%20data.csv?sequence=1')
names(data) <- tolower(gsub("\\.", "_", names(data)))
colnames(data) <- c('species', 'female_dewlap_area', 'male_dewlap_area', "sexual_dimorphism_in_dewlap_area", "sexual_size_dimorphism_svl", "sexual_dichromatism_chromatic_contrast",'sexual_dichromatism_achromatic_contrast', 'female_dewlap_chromatic_contrast', 'male_dewlap_chromatic_contrast','female_dewlap_achromatic_contrast', 'male_dewlap_achromatic_contrast', 'light_level_auc','predation_category')
data$species <- tolower(gsub(" ", "_", (data$species)))
data$species <- gsub("\\(", "", (data$species))
data$species <- gsub("\\)", "", (data$species))
units <- c(rep('cm^2',2), 'cm^2 (nl)', 'cm', rep('JND', 6), 'nl', NA)
data <- .df.melt(data, "species", units=units)
return(data)
}
.klomp.2016()
library(reshape2)
library(gdata)
.klomp.2016()
data <- read.csv('http://datadryad.org/bitstream/handle/10255/dryad.117914/draco_comparative%20data.csv?sequence=1')
head(data)
names(data) <- tolower(gsub("\\.", "_", names(data)))
colnames(data) <- c('species', 'female_dewlap_area', 'male_dewlap_area', "sexual_dimorphism_in_dewlap_area", "sexual_size_dimorphism_svl", "sexual_dichromatism_chromatic_contrast",'sexual_dichromatism_achromatic_contrast', 'female_dewlap_chromatic_contrast', 'male_dewlap_chromatic_contrast','female_dewlap_achromatic_contrast', 'male_dewlap_achromatic_contrast', 'light_level_auc','predation_category')
data$species <- tolower(gsub(" ", "_", (data$species)))
data$species <- gsub("\\(", "", (data$species))
data$species <- gsub("\\)", "", (data$species))
head(data)
unique(data$species)
data <- read.csv('http://datadryad.org/bitstream/handle/10255/dryad.117914/draco_comparative%20data.csv?sequence=1')
names(data) <- tolower(gsub("\\.", "_", names(data)))
colnames(data) <- c('species', 'female_dewlap_area', 'male_dewlap_area', "sexual_dimorphism_in_dewlap_area", "sexual_size_dimorphism_svl", "sexual_dichromatism_chromatic_contrast",'sexual_dichromatism_achromatic_contrast', 'female_dewlap_chromatic_contrast', 'male_dewlap_chromatic_contrast','female_dewlap_achromatic_contrast', 'male_dewlap_achromatic_contrast', 'light_level_auc','predation_category')
data$species <- tolower(gsub(" ", "_", (data$species)))
data$species <- gsub("\\(", "", (data$species))
data$species <- gsub("\\)", "", (data$species))
data$species <- gsub("_population", "", (data$species))
head(data)
unique(data$species)
data <- read.csv('http://datadryad.org/bitstream/handle/10255/dryad.117914/draco_comparative%20data.csv?sequence=1')
names(data) <- tolower(gsub("\\.", "_", names(data)))
colnames(data) <- c('species', 'female_dewlap_area', 'male_dewlap_area', "sexual_dimorphism_in_dewlap_area", "sexual_size_dimorphism_svl", "sexual_dichromatism_chromatic_contrast",'sexual_dichromatism_achromatic_contrast', 'female_dewlap_chromatic_contrast', 'male_dewlap_chromatic_contrast','female_dewlap_achromatic_contrast', 'male_dewlap_achromatic_contrast', 'light_level_auc','predation_category')
data$species <- tolower(gsub(" ", "_", (data$species)))
data$species <- gsub("\\(", "", (data$species))
data$species <- gsub("\\)", "", (data$species))
data$species <- gsub("_population", "", (data$species))
data$species <- gsub("_gombak", "", (data$species))
data$species <- gsub("_niah", "", (data$species))
data$species <- gsub("_borneo", "", (data$species))
data$species <- gsub("_mainland", "", (data$species))
data$species <- gsub("_bako", "", (data$species))
unique(data$species)
data$species <- paste0('draco_',data$species)
unique(data$species)
data <- read.table(ft_get_si("10.5061/dryad.55610", "Data%20%28revised%29.txt"), header=T, sep='\t')
data <- data[,-c(2:4,7,9:10,12:13,17,25)]
data$Species <- tolower(gsub(" ", "_", (data$Species)))
data <- read.table(http://datadryad.org/bitstream/handle/10255/dryad.108670/Data%20%28revised%29.txt?sequence=1, header=T, sep='\t')
data <- read.table("http://datadryad.org/bitstream/handle/10255/dryad.108670/Data%20%28revised%29.txt?sequence=1", header=T, sep='\t')
data <- data[,-c(2:4,7,9:10,12:13,17,25)]
data$Species <- tolower(gsub(" ", "_", (data$Species)))
colnames(data) <- c('species','longitude','latitude','average_female_adult_weight','mean_female_svl_adults','female_svl_at_maturity','offspring_svl','mean_clutch_size','mode_of_reproduction','clutch_per_year','clutch_frequency','relative_clutch_mass','foraging_mode','distribution','prefered_habitat_type')
head(data)
unique(data$species)
print(unique(data$species))
cat(unique(data$species))
print(unique(data$species))
cat(unique(data$species))
?cat
cat(unique(data$species), sep='')
cat(unique(data$species), sep=',')
cat(unique(data$species), sep=',')
data <- read.xls('http://datadryad.org/bitstream/handle/10255/dryad.124881/Data%20for%20Dryad.xlsx?sequence=1', skip=1)
data <- data[,-c(23:102)]
data$Species <- tolower(gsub(" ", "_", (data$Species)))
names(data) <- tolower(gsub("\\.", "_", names(data)))
unique(data$species)
cat(unique(data$species), sep=',')
data <- read.csv('http://datadryad.org/bitstream/handle/10255/dryad.102425/Rutschmann_AdaptationofPhenologyacrossPopulations_dataset.csv?sequence=1', sep=';')
names(data) <- tolower(gsub("X\\.", "", names(data)))
data <- data[,-c(1:3)]
data$species <- 'zootoca_vivipara'
colnames(data) <- c('altitude','snout_vent_length','total_mass','parturition_year', 'parturition_day', 'mid_gestation_temperatures', 'forest_cover_coefficient','mountain_chain','species')
head(rutschmann)
head(data)
data <- read.table('http://datadryad.org/bitstream/handle/10255/dryad.34389/21%20species%20means.txt?sequence=1',header=T,sep = '\t')
head(data)
unique(data$species)
data <- read.table(ft_get_si("10.5061/dryad.1d24c","21%20species%20means.txt"),header=T,sep = '\t')
units <- c(rep('mm',20))
colnames(data) <- c('species', 'ecomorph', 'snout_vent_length', 'head_length', 'head_width' 'head_height', 'pectoral_width','pelvis_width', 'lamellae_3rd_foretoe','lamellae_4th_hindtoe', 'humerus_length', 'ulna_length')
unique(data$species)
data <- read.table(ft_get_si("10.5061/dryad.1d24c","21%20species%20means.txt"),header=T,sep = '\t')
head(data)
unique(data$Species)
data$species <- gsub('A. ','anolis_')
data$species <- gsub('A. ','anolis_', data$species)
head(data)
data$species <- gsub('A. ','anolis_', data$species)
data$species <- gsub('A. ','anolis_', data$Species)
head(data)
cat(unique$data$species)
cat(unique(data$species))
cat(unique(data$species), sep=',')
data <- read.csv2('http://datadryad.org/bitstream/handle/10255/dryad.86947/phenotypictraits.csv?sequence=1', sep=';')
data <- data[,-c(1:5,10,12:13)]
data$species <- 'zootoca_vivipara'
file<-tempfile()
download.file("https://datadryad.org/bitstream/handle/10255/dryad.47130/Ontogenetic%20allometry%20data.csv?sequence=1",file)
data<-read.csv(file)
data <- read.csv('http://datadryad.org/bitstream/handle/10255/dryad.47130/Ontogenetic%20allometry%20data.csv?sequence=1')
data<-data[,-c(2:3,5)]
head(data)
colnames(data) <- c('species','snout_vent_length','face_length','body_length')
data$species <- gsub('A. ','anolis_',data$species)
head(data)
cat(unique$species)
cat(unique(data$species))
cat(unique(data$species), sep=',')
data <- read.csv('http://datadryad.org/bitstream/handle/10255/dryad.115900/winchell_evol_phenshifts.csv?sequence=1')
head(data)
data <- data[,-c(1:2,15:16)]
data$species <- 'A.cristatellus'
data$species <- 'anolis_cristatellus'
head(data)
data$perch.diam.cm <- as.numeric(data$perch.diam.cm)
head(data)
head(data)
data <- read.csv(ft_get_si("10.5061/dryad.9vk07","KamathLososEvol_AnolissagreiMorphAvg.csv"))
setwd("~/Desktop/natdb/R")
